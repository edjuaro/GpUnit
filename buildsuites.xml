<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns:if="ant:if"
    xmlns:unless="ant:unless"
    xmlns:artifact="antlib:org.apache.maven.artifact.ant"
>

    <!--******************************************************************************************-->
    <!-- Module test targets -->
    <!--******************************************************************************************-->

    <!--******************************************************************************************-->
    <!-- Test repository management -->
    <!--******************************************************************************************-->

    <target name="clone-test-repos" unless="noclonetests" depends="package, init-git.parentdir"
        description="make a local copy (git clone) of each GenePattern module GitHub repository" >
        <clone-repo git.repo.name="ABSOLUTE" />
        <clone-repo git.repo.name="ComparativeMarkerSelection" />
        <clone-repo git.repo.name="CoxRegression" /> <!-- tests '<R>' substitution -->
        <clone-repo git.repo.name="ExpressionFileCreator" />
        <clone-repo git.repo.name="HeatMapImage" />
        <clone-repo git.repo.name="HeatMapViewer" />
        <clone-repo git.repo.name="HierarchicalClustering" />
        <clone-repo git.repo.name="MergeHTSeqCounts" />
        <clone-repo git.repo.name="PreprocessDataset" />
        <clone-repo git.repo.name="PreprocessReadCounts" />
        <clone-repo git.repo.name="TopHat" />
        <clone-repo git.repo.name="txt2odf" />
        <clone-repo git.repo.name="TCGAImporter" /> <!-- Starting to add chronologically rather than alphabetically -->
    </target>

    <!--
      special-case for Broad hosted (non-containerized) servers:
      pin to older version of the gpunit tests, HierarchicalClustering v6
    -->
    <target name="clone-hcl_v6" unless="noclonetests" depends="package, init-git.parentdir"
        description="pull HierarchicalClustering v6 tests from GitHub" 
     >
        <!-- Example git command: --><?code git reset --hard tags/v6 ?>
        <clone-repo git.repo.name="HierarchicalClustering" git.origin.name="tags" git.branch.name="v6" />
    </target>

    <target name="clean-test-repos" depends="init-git.parentdir"
        description="clean the git.parentdir, which is a clone of all the module GitHub repositories"
    >
        <delete dir="${git.parentdir}" />
    </target>

    <!--******************************************************************************************-->
    <!-- Test targets for individual modules. Each module has a fileset definition and a run target -->
    <!-- Ideally short running tests will be in the top level gpunit dir, and other will be in a sub dir -->
    <!-- see below for examples -->
    <!--******************************************************************************************-->

    <!-- ABSOLUTE -->
    <fileset id="weeklyABSOLUTETests" dir="${git.parentdir.default}/ABSOLUTE/gpunit" >
        <!--ABSOLUTE v2 -->
        <include name="v2/Weekly/*.yml" />
    </fileset>

    <target name="weekly-absolute-tests" depends="package, clone-test-repos" >
        <pathconvert property="weekly.tests" refid="weeklyABSOLUTETests" />
        <run-tests
                testcases="${weekly.tests}"
                numThreads="5"
                shutdownTimeout="${gpunit.shutdownTimeout}"
                />
    </target>

    <!-- ComparativeMarkerSelection -->
    <fileset id="ShortComparativeMarkerSelectionTests" dir="${git.parentdir.default}/ComparativeMarkerSelection/gpunit" >
        <!-- ComparativeMarkerSelection v10 -->
        <include name="DefaultSmokeTest_Protocol/*.yml" />
    </fileset>

    <target name="short-cms-tests" depends="package, clone-test-repos">
        <pathconvert property="short.nightly.tests" refid="ShortComparativeMarkerSelectionTests" />
        <run-tests
                testcases="${short.nightly.tests}"
                numThreads="5"
                shutdownTimeout="${gpunit.shutdownTimeout}"
                />
    </target>

    <!-- CoxRegression -->
    <fileset id="ShortCoxRegressionTests" dir="${git.parentdir.default}/CoxRegression/gpunit" >
        <!-- include all top-level tests. Hint: to add a long running test put it in a sub folder -->
        <include name="*.yml" />
        <include name="*.yaml" />
    </fileset>

    <!-- ExpressionFileCreator -->
    <fileset id="ShortExpressionFileCreatorTests" dir="${git.parentdir.default}/ExpressionFileCreator/gpunit" >
        <!-- ExpressionFileCreator - v13 smoke tests only -->
        <include name="smoke*.yml" />
    </fileset>

    <target name="short-efc-tests" depends="package, clone-test-repos">
        <pathconvert property="short.nightly.tests" refid="ShortExpressionFileCreatorTests" />
        <run-tests
            testcases="${short.nightly.tests}"
            numThreads="5"
            shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

    <!-- HeatMapImage -->
    <fileset id="ShortHeatMapImageTests" dir="${git.parentdir.default}/HeatMapImage/gpunit" >
        <!-- HeatMapImage - latest -->
        <include name="smoke*.yaml" />
    </fileset>

    <target name="short-hmi-tests" depends="package, clone-test-repos">
        <pathconvert property="short.nightly.tests" refid="ShortHeatMapImageTests" />
        <run-tests
            testcases="${short.nightly.tests}"
            numThreads="5"
            shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

    <!-- HeatMapViewer -->
    <fileset id="ShortHeatMapViewerTests" dir="${git.parentdir.default}/HeatMapViewer/gpunit" >
        <include name="smoke*.yml" />
    </fileset>

    <target name="short-hmv-tests" depends="package, clone-test-repos">
        <pathconvert property="short.nightly.tests" refid="ShortHeatMapViewerTests" />
        <run-tests
            testcases="${short.nightly.tests}"
            numThreads="5"
            shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

    <!-- HierarchicalClustering -->
    <fileset id="ShortHierarchicalClusteringTests" dir="${git.parentdir.default}/HierarchicalClustering/gpunit" >
        <!-- HierarchicalClustering - v6 -->
        <include name="*.yml" />
    </fileset>

    <target name="short-hc-tests" depends="package, clone-test-repos">
        <pathconvert property="short.nightly.tests" refid="ShortHierarchicalClusteringTests" />
        <run-tests
            testcases="${short.nightly.tests}"
            numThreads="5"
            shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

    <!-- MergeHTSeqCounts -->
    <fileset id="nightlyMergeHTSeqCountsTests" dir="${git.parentdir.default}/MergeHTSeqCounts/gpunit" >
        <include name="nightly*.yml" />
    </fileset>

    <target name="nightly-mergehtseq-tests" depends="package, clone-test-repos" >
        <pathconvert property="nightly.tests" refid="nightlyMergeHTSeqCountsTests" />
        <run-tests
                testcases="${short.nightly.tests}"
                numThreads="5"
                shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

<!-- PreprocessDataset -->
    <fileset id="nightlyPreprocessDatasetTests" dir="${git.parentdir.default}/PreprocessDataset/gpunit" >
        <include name="smoke*.yml" />
    </fileset>

    <target name="nightly-preprocessdataset-tests" depends="package, clone-test-repos" >
        <pathconvert property="nightly.tests" refid="nightlyPreprocessDatasetTests" />
        <run-tests
                testcases="${short.nightly.tests}"
                numThreads="5"
                shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

<!-- PreprocessReadCounts -->
    <fileset id="nightlyPreprocessReadCountsTests" dir="${git.parentdir.default}/PreprocessReadCounts/gpunit" >
        <include name="smoke*.yml" />
    </fileset>

    <target name="nightly-preprocessreadcounts-tests" depends="package, clone-test-repos" >
        <pathconvert property="nightly.tests" refid="nightlyPreprocessReadCountsTests" />
        <run-tests
                testcases="${short.nightly.tests}"
                numThreads="5"
                shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

    <!-- TopHat -->
    <fileset id="ShortTopHatTests" dir="${git.parentdir.default}/TopHat/gpunit/" >
        <!-- TopHat v9 -->
        <!-- this test has the smallest output folder -->
        <include name="smoke_valid_pset_13_test.yml" />
    </fileset>

    <target name="short-tophat-tests" depends="package, clone-test-repos">
        <pathconvert property=":" refid="ShortTopHatTests" />
        <run-tests
            testcases="${short.nightly.tests}"
            numThreads="5"
            shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

    <!-- txt2odf -->
    <fileset id="Shorttxt2odfTests" dir="${git.parentdir.default}/txt2odf/gpunit" >
        <!-- txt2odf - v2 -->
        <include name="*.yml" />
    </fileset>

    <target name="short-txt2odf-tests" depends="package, clone-test-repos">
        <pathconvert property="short.nightly.tests" refid="Shorttxt2odfTests" />
        <run-tests
            testcases="${short.nightly.tests}"
            numThreads="5"
            shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

    <!-- download_from_gdc renamed to TCGAImporter-->
    <fileset id="ShortTCGAImporterTests" dir="${git.parentdir.default}/TCGAImporter/gpunit" >
        <!-- TCGAImporter - v2.x -->
        <include name="*.yml" />
    </fileset>

    <target name="short-TCGAImporter-tests" depends="package, clone-test-repos">
        <pathconvert property="short.nightly.tests" refid="ShortTCGAImporterTests" />
        <run-tests
            testcases="${short.nightly.tests}"
            numThreads="5"
            shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

    <!--******************************************************************************************-->
    <!-- Aggregate test suite target definitions. Set "noclonetests" to skip the git phase. -->
    <!--******************************************************************************************-->

    <!--******************************************************************************************-->
    <!-- Begin of: Three groups of nighly tests -->
    <!--******************************************************************************************-->

    <!-- Regression tests in gp-beta-ami -->
    <target name="short-nightly-tests" depends="package, clone-test-repos">
        <union id="short.tests">
            <resources refid="ShortComparativeMarkerSelectionTests" />
            <resources refid="ShortCoxRegressionTests" />
            <resources refid="ShortExpressionFileCreatorTests" />
            <resources refid="ShortHeatMapImageTests" />
            <resources refid="ShortHeatMapViewerTests" />
            <resources refid="ShortHierarchicalClusteringTests" />
            <resources refid="ShortTopHatTests" />
            <resources refid="Shorttxt2odfTests" />
            <resources refid="nightlyMergeHTSeqCountsTests" />
            <resources refid="nightlyPreprocessDatasetTests" />
            <resources refid="nightlyPreprocessReadCountsTests" />
        </union>
        <!-- The GpUnit code parses filesets using the value returned by a call to File.pathSeparator() -->
    	<!-- as the delimiter. This returns ";" on Windows and ":" on Linux. However, ant creates filesets -->
    	<!-- with ";" as the separator on both platforms (!). The pathconvert task transforms the fileset -->
    	<!-- to one with a delimiter that properly matches what the code expects. -->
        <pathconvert property="short.nightly.tests" refid="short.tests" />
        <run-tests
            testcases="${short.nightly.tests}"
            numThreads="5"
            shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

    <!-- Regression tests in Jenkins for IU -->
    <target name="short-nightly-tests-iu" depends="package, clone-test-repos, clone-hcl_v6">
        <union id="short.tests.iu">
            <resources refid="ShortComparativeMarkerSelectionTests" />
            <!-- resources refid="ShortCoxRegressionTests" / -->
            <resources refid="ShortExpressionFileCreatorTests" />
            <resources refid="ShortHeatMapImageTests" />
            <resources refid="ShortHeatMapViewerTests" />
            <resources refid="ShortHierarchicalClusteringTests" />
            <resources refid="ShortTopHatTests" />
            <resources refid="nightlyMergeHTSeqCountsTests" />
            <resources refid="nightlyPreprocessDatasetTests" />
            <resources refid="nightlyPreprocessReadCountsTests" />
        </union>
        <!-- The GpUnit code parses filesets using the value returned by a call to File.pathSeparator() -->
        <!-- as the delimiter. This returns ";" on Windows and ":" on Linux. However, ant creates filesets -->
        <!-- with ";" as the separator on both platforms (!). The pathconvert task transforms the fileset -->
        <!-- to one with a delimiter that properly matches what the code expects. -->
        <pathconvert property="short.nightly.tests" refid="short.tests.iu" />
        <run-tests
            testcases="${short.nightly.tests}"
            numThreads="5"
            shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

    <!-- Regression tests in broad servers -->
    <target name="short-nightly-tests-broad" depends="package, clone-test-repos, clone-hcl_v6">
        <union id="short.tests.broad">
            <resources refid="ShortComparativeMarkerSelectionTests" />
            <resources refid="ShortCoxRegressionTests" />
            <resources refid="ShortExpressionFileCreatorTests" />
            <resources refid="ShortHeatMapImageTests" />
            <resources refid="ShortHeatMapViewerTests" />
            <!-- pinned to v6 by 'clone-hcl_v6' dependency -->
            <resources refid="ShortHierarchicalClusteringTests" />
            <resources refid="ShortTopHatTests" />
            <resources refid="nightlyMergeHTSeqCountsTests" />
            <resources refid="nightlyPreprocessDatasetTests" />
            <resources refid="nightlyPreprocessReadCountsTests" />
        </union>
        <!-- The GpUnit code parses filesets using the value returned by a call to File.pathSeparator() -->
    	<!-- as the delimiter. This returns ";" on Windows and ":" on Linux. However, ant creates filesets -->
    	<!-- with ";" as the separator on both platforms (!). The pathconvert task transforms the fileset -->
    	<!-- to one with a delimiter that properly matches what the code expects. -->
        <pathconvert property="short.nightly.tests" refid="short.tests.broad" />
        <run-tests
            testcases="${short.nightly.tests}"
            numThreads="5"
            shutdownTimeout="${gpunit.shutdownTimeout}"
        />
    </target>

    <!--******************************************************************************************-->
    <!-- End of: Three groups of nighly tests -->
    <!--******************************************************************************************-->


    <target name="nightly-smoke-tests" depends="package, clone-test-repos">
        <union id="smoke.tests">
            <!--resources refid="ShortABSOLUTETests" /-->
        </union>
        <pathconvert property="nightly.smoke.tests" refid="smoke.tests" />
        <run-tests
                testcases="${nightly.smoke.tests}"
                numThreads="5"
                shutdownTimeout="${gpunit.shutdownTimeout}"
                />
    </target>

    <target name="weekly-tests" depends="package, clone-test-repos">
        <union id="weekly.tests">
            <resources refid="weeklyABSOLUTETests" />
        </union>
        <pathconvert property="weekly.tests" refid="weekly.tests" />
        <run-tests
                testcases="${weekly.tests}"
                numThreads="5"
                shutdownTimeout="${gpunit.shutdownTimeout}"
                />
    </target>

</project>
